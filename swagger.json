{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "appHealthCheck",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "健康检查",
        "tags": [
          "应用"
        ]
      }
    },
    "/casdoor-demo": {
      "get": {
        "operationId": "appGetCasdoorDemo",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Casdoor 登录演示页面",
        "tags": [
          "应用"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "userCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "用户创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "请求参数验证失败"
          },
          "409": {
            "description": "用户名已存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "创建用户",
        "tags": [
          "用户管理"
        ]
      },
      "get": {
        "operationId": "userFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "获取用户列表成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有用户",
        "tags": [
          "用户管理"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "userFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "用户ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取用户成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "用户不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取指定用户",
        "tags": [
          "用户管理"
        ]
      },
      "put": {
        "operationId": "userUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "用户ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新用户成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "请求参数验证失败"
          },
          "404": {
            "description": "用户不存在"
          },
          "409": {
            "description": "用户名已存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "更新用户信息",
        "tags": [
          "用户管理"
        ]
      },
      "delete": {
        "operationId": "userRemove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "用户ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "删除用户成功"
          },
          "404": {
            "description": "用户不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除用户",
        "tags": [
          "用户管理"
        ]
      }
    },
    "/tokens": {
      "post": {
        "description": "Create a new API token for a specific user. Requires authentication.",
        "operationId": "tokenCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The API token has been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input (e.g. invalid userId or expiration date)"
          },
          "401": {
            "description": "Unauthorized - JWT token is missing or invalid"
          },
          "403": {
            "description": "Forbidden - User does not have permission to create token for the specified user"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create new API token",
        "tags": [
          "密钥管理"
        ]
      }
    },
    "/tokens/{id}": {
      "patch": {
        "description": "Update an existing API token properties. Requires authentication.",
        "operationId": "tokenUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The API token has been successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input (e.g. invalid expiration date)"
          },
          "401": {
            "description": "Unauthorized - JWT token is missing or invalid"
          },
          "403": {
            "description": "Forbidden - User does not have permission to update this token"
          },
          "404": {
            "description": "Token not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update API token",
        "tags": [
          "密钥管理"
        ]
      }
    },
    "/licenses/import": {
      "post": {
        "operationId": "licenseImportLicense",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportLicenseDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "License 导入成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "licenseId": {
                      "type": "string"
                    },
                    "hardwareId": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "maxUsers": {
                      "type": "number"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expireDate": {
                      "type": "string"
                    },
                    "activateAt": {
                      "type": "string"
                    },
                    "isValid": {
                      "type": "boolean"
                    },
                    "lastVerifiedAt": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "License 验证失败或已存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "导入 License",
        "tags": [
          "授权管理"
        ]
      }
    },
    "/licenses/current": {
      "get": {
        "operationId": "licenseGetCurrentLicense",
        "parameters": [],
        "responses": {
          "200": {
            "description": "获取当前 License 成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "licenseId": {
                      "type": "string"
                    },
                    "hardwareId": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "maxUsers": {
                      "type": "number"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "expireDate": {
                      "type": "string"
                    },
                    "activateAt": {
                      "type": "string"
                    },
                    "isValid": {
                      "type": "boolean"
                    },
                    "lastVerifiedAt": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "未找到有效的 License"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取当前有效 License",
        "tags": [
          "授权管理"
        ]
      }
    },
    "/licenses/revoke": {
      "delete": {
        "operationId": "licenseRevokeLicense",
        "parameters": [],
        "responses": {
          "200": {
            "description": "撤销 License 成功"
          },
          "404": {
            "description": "未找到有效的 License"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "撤销当前 License",
        "tags": [
          "授权管理"
        ]
      }
    },
    "/roles": {
      "post": {
        "operationId": "roleCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "admin"
                  },
                  "description": {
                    "type": "string",
                    "example": "管理员角色"
                  },
                  "permissionIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "example": [
                      1,
                      2,
                      3
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "创建角色",
        "tags": [
          "角色管理"
        ]
      },
      "get": {
        "operationId": "roleFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有角色",
        "tags": [
          "角色管理"
        ]
      }
    },
    "/roles/{id}": {
      "get": {
        "operationId": "roleFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "角色ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取指定角色",
        "tags": [
          "角色管理"
        ]
      },
      "put": {
        "operationId": "roleUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "角色ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "admin"
                  },
                  "description": {
                    "type": "string",
                    "example": "管理员角色"
                  },
                  "permissionIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "example": [
                      1,
                      2,
                      3
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "更新角色信息",
        "tags": [
          "角色管理"
        ]
      },
      "delete": {
        "operationId": "roleRemove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "角色ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除角色",
        "tags": [
          "角色管理"
        ]
      }
    },
    "/roles/{id}/permissions": {
      "post": {
        "operationId": "roleAddPermissions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "角色ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "permissionIds"
                ],
                "properties": {
                  "permissionIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "example": [
                      1,
                      2,
                      3
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "添加角色权限",
        "tags": [
          "角色管理"
        ]
      },
      "delete": {
        "operationId": "roleRemovePermissions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "角色ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "permissionIds"
                ],
                "properties": {
                  "permissionIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "example": [
                      1,
                      2,
                      3
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "移除角色权限",
        "tags": [
          "角色管理"
        ]
      }
    },
    "/permissions": {
      "post": {
        "operationId": "permissionCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "code"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "创建用户"
                  },
                  "code": {
                    "type": "string",
                    "example": "create:user"
                  },
                  "description": {
                    "type": "string",
                    "example": "创建新用户的权限"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "创建权限",
        "tags": [
          "权限管理"
        ]
      },
      "get": {
        "operationId": "permissionFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有权限",
        "tags": [
          "权限管理"
        ]
      }
    },
    "/permissions/{id}": {
      "get": {
        "operationId": "permissionFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "权限ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取指定权限",
        "tags": [
          "权限管理"
        ]
      },
      "put": {
        "operationId": "permissionUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "权限ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "创建用户"
                  },
                  "code": {
                    "type": "string",
                    "example": "create:user"
                  },
                  "description": {
                    "type": "string",
                    "example": "创建新用户的权限"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "更新权限信息",
        "tags": [
          "权限管理"
        ]
      },
      "delete": {
        "operationId": "permissionRemove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "权限ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除权限",
        "tags": [
          "权限管理"
        ]
      }
    },
    "/groups": {
      "post": {
        "description": "创建一个新的用户分组，可以指定分组名称、描述以及可访问的代理和模型",
        "operationId": "groupCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "分组创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "请求参数验证失败"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "创建新分组",
        "tags": [
          "分组管理"
        ]
      },
      "get": {
        "description": "获取系统中所有的用户分组列表，包含分组的基本信息、关联的用户、代理和模型",
        "operationId": "groupFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "返回所有分组列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有分组",
        "tags": [
          "分组管理"
        ]
      }
    },
    "/groups/{id}": {
      "get": {
        "description": "根据分组ID获取特定分组的详细信息，包括关联的用户、代理和模型",
        "operationId": "groupFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "返回指定分组信息",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "404": {
            "description": "分组不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "根据ID获取分组",
        "tags": [
          "分组管理"
        ]
      },
      "patch": {
        "description": "更新指定分组的信息，可以修改分组名称、描述，以及重新分配可访问的代理和模型",
        "operationId": "groupUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "分组更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "请求参数验证失败"
          },
          "404": {
            "description": "分组不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "更新分组信息",
        "tags": [
          "分组管理"
        ]
      },
      "delete": {
        "description": "删除指定的分组，同时会解除与该分组关联的所有用户、代理和模型的关系",
        "operationId": "groupRemove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "分组删除成功"
          },
          "404": {
            "description": "分组不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除分组",
        "tags": [
          "分组管理"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "authLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "登录成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "用户名或密码错误"
          }
        },
        "summary": "用户登录",
        "tags": [
          "认证"
        ]
      }
    },
    "/auth/casdoor": {
      "get": {
        "operationId": "authCasdoorLogin",
        "parameters": [
          {
            "name": "redirect_uri",
            "required": false,
            "in": "query",
            "description": "自定义重定向URI",
            "schema": {
              "example": "http://localhost:3000/dashboard",
              "type": "string"
            }
          },
          {
            "name": "client",
            "required": false,
            "in": "query",
            "description": "客户端类型: admin, desktop, web",
            "schema": {
              "example": "admin"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "重定向到 Casdoor 登录页面"
          },
          "401": {
            "description": "SSO 登录未配置，请联系管理员"
          }
        },
        "summary": "Casdoor 登录",
        "tags": [
          "认证"
        ]
      }
    },
    "/auth/casdoor/callback": {
      "get": {
        "operationId": "authCasdoorCallback",
        "parameters": [
          {
            "name": "state",
            "required": false,
            "in": "query",
            "description": "包含客户端信息的状态参数",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "登录成功（JSON响应）",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "302": {
            "description": "重定向到客户端"
          },
          "401": {
            "description": "SSO 登录未配置，请联系管理员"
          }
        },
        "summary": "Casdoor 登录回调",
        "tags": [
          "认证"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "authRefresh",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponseDto"
                }
              }
            }
          }
        },
        "summary": "刷新访问令牌",
        "tags": [
          "认证"
        ]
      }
    },
    "/providers": {
      "get": {
        "operationId": "providerFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "返回所有服务商",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Provider"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有服务商",
        "tags": [
          "服务商"
        ]
      },
      "post": {
        "operationId": "providerCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProviderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "服务商已成功创建",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "创建服务商",
        "tags": [
          "服务商"
        ]
      }
    },
    "/providers/{id}": {
      "get": {
        "operationId": "providerFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "服务商ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "返回指定服务商",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "404": {
            "description": "服务商不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取指定服务商",
        "tags": [
          "服务商"
        ]
      },
      "put": {
        "operationId": "providerUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "服务商ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProviderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "服务商已成功更新",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "404": {
            "description": "服务商不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "更新服务商",
        "tags": [
          "服务商"
        ]
      },
      "delete": {
        "operationId": "providerRemove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "服务商ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "服务商已成功删除"
          },
          "404": {
            "description": "服务商不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除服务商",
        "tags": [
          "服务商"
        ]
      }
    },
    "/providers/{id}/models": {
      "post": {
        "operationId": "providerAddModel",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "服务商ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddModelDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "模型已成功添加",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "404": {
            "description": "服务商不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "为服务商添加模型",
        "tags": [
          "服务商"
        ]
      },
      "delete": {
        "operationId": "providerRemoveModels",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "服务商ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveModelsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "模型已成功批量删除"
          },
          "404": {
            "description": "服务商或部分模型不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "批量删除服务商的模型",
        "tags": [
          "服务商"
        ]
      }
    },
    "/providers/{id}/models/batch": {
      "post": {
        "operationId": "providerBatchUpdateModels",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "服务商ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddModelsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "模型已成功批量更新（原有模型已被删除）",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              }
            }
          },
          "404": {
            "description": "服务商不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "批量更新服务商的模型（会删除原有模型）",
        "tags": [
          "服务商"
        ]
      }
    },
    "/providers/{id}/models/{modelId}": {
      "delete": {
        "operationId": "providerRemoveModel",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "服务商ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "modelId",
            "required": true,
            "in": "path",
            "description": "模型ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "模型已成功删除"
          },
          "404": {
            "description": "服务商或模型不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除服务商的指定模型",
        "tags": [
          "服务商"
        ]
      }
    },
    "/models": {
      "get": {
        "operationId": "modelFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "返回所有模型",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有模型",
        "tags": [
          "模型管理"
        ]
      }
    },
    "/models/{id}": {
      "get": {
        "operationId": "modelFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "模型ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "返回指定模型",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "404": {
            "description": "模型不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取指定模型",
        "tags": [
          "模型管理"
        ]
      },
      "put": {
        "operationId": "modelUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "模型ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "模型更新数据",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "模型更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "404": {
            "description": "模型不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "更新模型信息",
        "tags": [
          "模型管理"
        ]
      }
    },
    "/models/provider/{providerId}": {
      "get": {
        "operationId": "modelFindByProviderId",
        "parameters": [
          {
            "name": "providerId",
            "required": true,
            "in": "path",
            "description": "提供商ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "返回指定提供商的所有模型",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "根据提供商ID获取模型列表",
        "tags": [
          "模型管理"
        ]
      }
    },
    "/models/search/{modelId}": {
      "get": {
        "operationId": "modelFindByModelId",
        "parameters": [
          {
            "name": "modelId",
            "required": true,
            "in": "path",
            "description": "模型ID（如gpt-4）",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "返回匹配的模型列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "根据模型ID搜索模型",
        "tags": [
          "模型管理"
        ]
      }
    },
    "/agents": {
      "post": {
        "operationId": "agentCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agent创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          }
        },
        "summary": "创建Agent",
        "tags": [
          "智能体"
        ]
      },
      "get": {
        "operationId": "agentFindAll",
        "parameters": [
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "按分组筛选Agent",
            "schema": {
              "example": "default",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取Agent列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  }
                }
              }
            }
          }
        },
        "summary": "获取所有Agent",
        "tags": [
          "智能体"
        ]
      }
    },
    "/agents/{id}": {
      "get": {
        "operationId": "agentFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取Agent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          },
          "404": {
            "description": "Agent不存在"
          }
        },
        "summary": "根据ID获取Agent",
        "tags": [
          "智能体"
        ]
      },
      "patch": {
        "operationId": "agentUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agent更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          },
          "404": {
            "description": "Agent不存在"
          }
        },
        "summary": "更新Agent",
        "tags": [
          "智能体"
        ]
      },
      "delete": {
        "operationId": "agentRemove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agent删除成功"
          },
          "404": {
            "description": "Agent不存在"
          }
        },
        "summary": "删除Agent",
        "tags": [
          "智能体"
        ]
      }
    },
    "/assistants": {
      "get": {
        "operationId": "assistantFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "返回所有智能体列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有智能体",
        "tags": [
          "助手"
        ]
      },
      "post": {
        "operationId": "assistantCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssistantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "智能体已成功创建",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "创建智能体",
        "tags": [
          "助手"
        ]
      }
    },
    "/assistants/{id}": {
      "get": {
        "operationId": "assistantFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "智能体ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "返回指定智能体",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取指定智能体",
        "tags": [
          "助手"
        ]
      },
      "put": {
        "operationId": "assistantUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "智能体ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssistantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "智能体已成功更新",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "404": {
            "description": "智能体不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "更新智能体",
        "tags": [
          "助手"
        ]
      },
      "delete": {
        "operationId": "assistantRemove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "智能体ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "智能体已成功删除"
          },
          "404": {
            "description": "智能体不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除智能体",
        "tags": [
          "助手"
        ]
      }
    },
    "/assistants/group/{groupId}": {
      "get": {
        "operationId": "assistantFindByGroupId",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "description": "组ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "返回指定组的智能体列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取指定组的智能体列表",
        "tags": [
          "助手"
        ]
      }
    },
    "/assistants/batch-update-mcp-servers": {
      "post": {
        "operationId": "assistantBatchUpdateMcpServers",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "包含完整 MCP 服务器配置对象的请求体",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchUpdateMcpServersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "批量更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updatedCount": {
                      "type": "number",
                      "description": "更新的助手数量",
                      "example": 3
                    },
                    "updatedAssistants": {
                      "type": "array",
                      "description": "被更新的助手列表",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "Business Consultant"
                          },
                          "matchedServers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "@modelscope/@modelcontextprotocol/time",
                              "kndZRfd-QvJ2vbAlA-RGm"
                            ],
                            "description": "匹配并更新的服务器 ID 列表"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "操作结果消息",
                      "example": "成功更新了 3 个助手的 MCP 服务器配置"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "请求参数错误"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "批量更新所有助手的 MCP 服务器配置",
        "tags": [
          "助手"
        ]
      }
    },
    "/knowledge-base": {
      "post": {
        "description": "创建一个新的知识库，包含基本配置信息",
        "operationId": "knowledgebaseCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKnowledgeBaseDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "知识库创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBase"
                }
              }
            }
          },
          "400": {
            "description": "请求参数验证失败"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "创建新的知识库",
        "tags": [
          "知识库管理"
        ]
      },
      "get": {
        "description": "获取系统中所有的知识库列表",
        "operationId": "knowledgebaseFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "知识库列表获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KnowledgeBase"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有知识库",
        "tags": [
          "知识库管理"
        ]
      }
    },
    "/knowledge-base/{id}": {
      "get": {
        "description": "通过知识库ID获取特定知识库的详细信息",
        "operationId": "knowledgebaseFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "知识库信息获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBase"
                }
              }
            }
          },
          "404": {
            "description": "知识库不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取指定知识库",
        "tags": [
          "知识库管理"
        ]
      },
      "patch": {
        "description": "更新指定知识库的配置信息",
        "operationId": "knowledgebaseUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKnowledgeBaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "知识库更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBase"
                }
              }
            }
          },
          "400": {
            "description": "请求参数验证失败"
          },
          "404": {
            "description": "知识库不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "更新知识库",
        "tags": [
          "知识库管理"
        ]
      },
      "delete": {
        "description": "删除指定的知识库及其相关资源",
        "operationId": "knowledgebaseRemove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "知识库删除成功"
          },
          "404": {
            "description": "知识库不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除知识库",
        "tags": [
          "知识库管理"
        ]
      }
    },
    "/knowledge-base/{id}/items": {
      "post": {
        "description": "为指定知识库添加新的条目（文件、网址、笔记等）",
        "operationId": "knowledgebaseAddItem",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKnowledgeBaseItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "知识库条目创建成功，返回完整的条目信息，包含知识库和文件（如果有）的关联数据",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseItem"
                }
              }
            }
          },
          "400": {
            "description": "请求参数验证失败"
          },
          "404": {
            "description": "知识库或文件不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "添加知识库条目",
        "tags": [
          "知识库管理"
        ]
      }
    },
    "/knowledge-base/{id}/items/{itemId}": {
      "delete": {
        "description": "删除指定知识库中的特定条目",
        "operationId": "knowledgebaseRemoveItem",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "知识库条目删除成功"
          },
          "404": {
            "description": "知识库或条目不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除知识库条目",
        "tags": [
          "知识库管理"
        ]
      }
    },
    "/knowledge-base/{id}/search": {
      "post": {
        "description": "在指定知识库中搜索内容，并返回相关结果",
        "operationId": "knowledgebaseSearch",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchKnowledgeBaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "搜索结果",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchKnowledgeBaseResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "请求参数验证失败"
          },
          "404": {
            "description": "知识库不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "搜索知识库",
        "tags": [
          "知识库管理"
        ]
      }
    },
    "/knowledge-base/{id}/rerank": {
      "post": {
        "description": "对搜索结果进行重排序，提高相关性",
        "operationId": "knowledgebaseRerank",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RerankKnowledgeBaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "重排序后的结果",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchKnowledgeBaseResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "请求参数验证失败或知识库未配置重排序模型"
          },
          "404": {
            "description": "知识库不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "重排序搜索结果",
        "tags": [
          "知识库管理"
        ]
      }
    },
    "/files/upload": {
      "post": {
        "operationId": "filesUploadFile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "文件上传成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "上传文件",
        "tags": [
          "文件管理"
        ]
      }
    },
    "/files": {
      "get": {
        "operationId": "filesFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "返回所有文件列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有文件",
        "tags": [
          "文件管理"
        ]
      }
    },
    "/files/{id}": {
      "get": {
        "operationId": "filesFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "文件ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "返回指定文件信息",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "文件不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "根据ID获取文件",
        "tags": [
          "文件管理"
        ]
      },
      "delete": {
        "operationId": "filesRemove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "文件ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "文件删除成功"
          },
          "404": {
            "description": "文件不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除文件",
        "tags": [
          "文件管理"
        ]
      }
    },
    "/files/download/{id}": {
      "get": {
        "operationId": "filedownloadDownloadFile",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "文件ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "文件下载成功"
          },
          "404": {
            "description": "文件不存在"
          }
        },
        "summary": "下载文件",
        "tags": [
          "文件下载"
        ]
      }
    },
    "/knowledge-base-processor/status": {
      "get": {
        "operationId": "knowledgebaseprocessorGetStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "返回队列当前状态和统计信息"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取队列状态",
        "tags": [
          "知识库队列"
        ]
      }
    },
    "/knowledge-base-processor/stats": {
      "get": {
        "operationId": "knowledgebaseprocessorGetStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "返回队列统计信息"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取队列统计信息",
        "tags": [
          "知识库队列"
        ]
      }
    },
    "/knowledge-base-processor/processing": {
      "get": {
        "operationId": "knowledgebaseprocessorGetProcessingItems",
        "parameters": [],
        "responses": {
          "200": {
            "description": "返回正在处理的项目列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KnowledgeBaseItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取正在处理的项目",
        "tags": [
          "知识库队列"
        ]
      }
    },
    "/knowledge-base-processor/pending": {
      "get": {
        "operationId": "knowledgebaseprocessorGetPendingItems",
        "parameters": [],
        "responses": {
          "200": {
            "description": "返回待处理的项目列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KnowledgeBaseItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取待处理的项目",
        "tags": [
          "知识库队列"
        ]
      }
    },
    "/knowledge-base-processor/failed": {
      "get": {
        "operationId": "knowledgebaseprocessorGetFailedItems",
        "parameters": [],
        "responses": {
          "200": {
            "description": "返回失败的项目列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KnowledgeBaseItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取失败的项目",
        "tags": [
          "知识库队列"
        ]
      }
    },
    "/knowledge-base-processor/retry/{id}": {
      "get": {
        "operationId": "knowledgebaseprocessorRetryFailedItem",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "重试指定的失败项目"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "重试失败的项目",
        "tags": [
          "知识库队列"
        ]
      }
    },
    "/v1/models": {
      "get": {
        "operationId": "chatModels",
        "parameters": [
          {
            "name": "provider",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "大模型"
        ]
      }
    },
    "/v1/check": {
      "post": {
        "description": "验证指定提供商和模型的可用性",
        "operationId": "chatCheck",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "检查成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "请求参数错误"
          },
          "404": {
            "description": "提供商不存在"
          }
        },
        "summary": "检查模型可用性",
        "tags": [
          "大模型"
        ]
      }
    },
    "/v1/responses": {
      "post": {
        "operationId": "openaiResponse",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "大模型"
        ]
      }
    },
    "/v1/chat/completions": {
      "post": {
        "operationId": "openaiChatCompletions",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "大模型"
        ]
      }
    },
    "/v1/embeddings": {
      "post": {
        "operationId": "openaiEmbeddings",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "大模型"
        ]
      }
    },
    "/v1/rerank": {
      "post": {
        "operationId": "openaiRerank",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "大模型"
        ]
      }
    },
    "/v1/images/generations": {
      "post": {
        "description": "使用 OpenAI 的 DALL-E 模型生成图片",
        "operationId": "openaiGenerateImage",
        "parameters": [],
        "responses": {
          "200": {
            "description": "生成成功"
          },
          "400": {
            "description": "请求参数错误"
          },
          "404": {
            "description": "提供商不存在"
          }
        },
        "summary": "生成图片",
        "tags": [
          "大模型"
        ]
      }
    },
    "/v1/messages": {
      "post": {
        "operationId": "anthropicMessages",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "大模型"
        ]
      }
    },
    "/v1beta/openai/embeddings": {
      "post": {
        "operationId": "geminiEmbeddings",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "大模型"
        ]
      }
    },
    "/v1beta/models/{id}": {
      "post": {
        "operationId": "geminiCompletions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "大模型"
        ]
      }
    },
    "/minapps": {
      "post": {
        "operationId": "minappCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file",
                  "name",
                  "url"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "小程序图标文件（必传，要求jpg/jpeg/png/webp格式，尺寸400x400，大小不超过200KB）"
                  },
                  "name": {
                    "type": "string",
                    "description": "小程序名称"
                  },
                  "url": {
                    "type": "string",
                    "description": "小程序链接"
                  },
                  "bodered": {
                    "type": "boolean",
                    "description": "是否显示边框"
                  },
                  "background": {
                    "type": "string",
                    "description": "背景色"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MinApp"
                }
              }
            }
          },
          "400": {
            "description": "请求参数错误"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "创建小程序",
        "tags": [
          "小程序管理"
        ]
      },
      "get": {
        "operationId": "minappFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MinApp"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有小程序",
        "tags": [
          "小程序管理"
        ]
      }
    },
    "/minapps/{id}": {
      "get": {
        "operationId": "minappFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MinApp"
                }
              }
            }
          },
          "404": {
            "description": "小程序不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取指定小程序",
        "tags": [
          "小程序管理"
        ]
      },
      "patch": {
        "operationId": "minappUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "小程序图标文件（jpg/jpeg/png/webp格式，尺寸400x400，大小不超过200KB）"
                  },
                  "name": {
                    "type": "string",
                    "description": "小程序名称"
                  },
                  "url": {
                    "type": "string",
                    "description": "小程序链接"
                  },
                  "bodered": {
                    "type": "boolean",
                    "description": "是否显示边框"
                  },
                  "background": {
                    "type": "string",
                    "description": "背景色"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "是否启用"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MinApp"
                }
              }
            }
          },
          "400": {
            "description": "请求参数错误"
          },
          "404": {
            "description": "小程序不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "更新小程序",
        "tags": [
          "小程序管理"
        ]
      },
      "delete": {
        "operationId": "minappRemove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "删除成功"
          },
          "404": {
            "description": "小程序不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除小程序",
        "tags": [
          "小程序管理"
        ]
      }
    },
    "/configurations": {
      "get": {
        "description": "获取当前用户的配置信息，包括API密钥和可用模型列表",
        "operationId": "configurationGetConfigurations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "成功获取配置信息",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "未授权访问"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取用户配置",
        "tags": [
          "配置"
        ]
      }
    },
    "/settings": {
      "get": {
        "description": "返回系统中所有的设置项列表",
        "operationId": "settingList",
        "parameters": [],
        "responses": {
          "200": {
            "description": "成功获取设置列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有设置",
        "tags": [
          "设置"
        ]
      }
    },
    "/settings/{key}": {
      "get": {
        "description": "根据设置键获取特定的设置项",
        "operationId": "settingGet",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "path",
            "description": "设置键",
            "schema": {
              "example": "app.name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功获取设置",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "设置不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取指定设置",
        "tags": [
          "设置"
        ]
      },
      "post": {
        "description": "创建新的设置或更新现有设置的值",
        "operationId": "settingSet",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "path",
            "description": "设置键",
            "schema": {
              "example": "app.name",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSettingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功创建或更新设置",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "创建或更新设置",
        "tags": [
          "设置"
        ]
      },
      "delete": {
        "description": "根据设置键删除特定的设置项",
        "operationId": "settingDelete",
        "parameters": [
          {
            "name": "key",
            "required": true,
            "in": "path",
            "description": "设置键",
            "schema": {
              "example": "app.name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功删除设置",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSettingResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "设置不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除设置",
        "tags": [
          "设置"
        ]
      }
    },
    "/workflows": {
      "post": {
        "operationId": "workflowCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "工作流创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "创建工作流",
        "tags": [
          "工作流"
        ]
      },
      "get": {
        "operationId": "workflowFindAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "获取工作流列表成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workflow"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取所有工作流",
        "tags": [
          "工作流"
        ]
      }
    },
    "/workflows/{id}": {
      "get": {
        "operationId": "workflowFindOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取工作流成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "404": {
            "description": "工作流不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "获取指定工作流",
        "tags": [
          "工作流"
        ]
      },
      "patch": {
        "operationId": "workflowUpdate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkflowDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "工作流更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "404": {
            "description": "工作流不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "更新工作流",
        "tags": [
          "工作流"
        ]
      },
      "delete": {
        "operationId": "workflowRemove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "工作流删除成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "404": {
            "description": "工作流不存在"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "删除工作流",
        "tags": [
          "工作流"
        ]
      }
    }
  },
  "info": {
    "title": "Cherry Studio API",
    "description": "Cherry Studio API documentation",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "用户名",
            "example": "john_doe"
          },
          "password": {
            "type": "string",
            "description": "密码",
            "example": "password123"
          },
          "email": {
            "type": "string",
            "description": "邮箱",
            "example": "john@example.com"
          },
          "mobile": {
            "type": "string",
            "description": "手机号",
            "example": "13800138000"
          },
          "nickname": {
            "type": "string",
            "description": "昵称",
            "example": "张三"
          },
          "avatar": {
            "type": "string",
            "description": "头像URL",
            "example": "https://example.com/avatar.jpg"
          },
          "groupId": {
            "type": "number",
            "description": "分组ID",
            "example": 1
          }
        },
        "required": [
          "username",
          "password",
          "groupId"
        ]
      },
      "Permission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "权限ID"
          },
          "name": {
            "type": "string",
            "description": "权限名称",
            "example": "Create User"
          },
          "description": {
            "type": "string",
            "description": "权限描述",
            "example": "Can create new users"
          },
          "code": {
            "type": "string",
            "description": "权限代码",
            "example": "create:user"
          }
        },
        "required": [
          "id",
          "name",
          "code"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "角色ID"
          },
          "name": {
            "type": "string",
            "description": "角色名称",
            "example": "admin"
          },
          "description": {
            "type": "string",
            "description": "角色描述",
            "example": "系统管理员"
          },
          "permissions": {
            "description": "角色权限",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        },
        "required": [
          "id",
          "name",
          "permissions"
        ]
      },
      "Token": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Token ID"
          },
          "token": {
            "type": "string",
            "description": "API Token",
            "example": "sk-xxxxxxxxxxxx"
          },
          "description": {
            "type": "string",
            "description": "Token Description",
            "example": "Development API Token"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "description": "Token Expiration Date"
          },
          "lastUsedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last Used At"
          },
          "isActive": {
            "type": "boolean",
            "description": "Is Token Active",
            "default": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Created At"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Updated At"
          }
        },
        "required": [
          "id",
          "token",
          "description",
          "expiresAt",
          "lastUsedAt",
          "isActive",
          "createdAt",
          "updatedAt"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "用户ID"
          },
          "username": {
            "type": "string",
            "description": "用户名",
            "example": "admin"
          },
          "email": {
            "type": "string",
            "description": "邮箱",
            "example": "admin@example.com"
          },
          "mobile": {
            "type": "string",
            "description": "手机号",
            "example": "13800138000"
          },
          "nickname": {
            "type": "string",
            "description": "昵称",
            "example": "张三"
          },
          "avatar": {
            "type": "string",
            "description": "头像URL",
            "example": "https://example.com/avatar.jpg"
          },
          "isActive": {
            "type": "boolean",
            "description": "是否激活",
            "default": true
          },
          "roles": {
            "description": "用户角色",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "token": {
            "description": "API Token",
            "allOf": [
              {
                "$ref": "#/components/schemas/Token"
              }
            ]
          },
          "group": {
            "description": "所属分组",
            "allOf": [
              {
                "$ref": "#/components/schemas/Group"
              }
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "创建时间"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "更新时间"
          }
        },
        "required": [
          "id",
          "username",
          "isActive",
          "roles",
          "token",
          "group",
          "createdAt",
          "updatedAt"
        ]
      },
      "Provider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the provider",
            "example": 1
          },
          "provider_id": {
            "type": "string",
            "description": "The unique identifier of the provider",
            "example": "openai"
          },
          "type": {
            "type": "string",
            "enum": [
              "openai",
              "openai-response",
              "anthropic",
              "gemini",
              "qwenlm",
              "azure-openai",
              "vertexai",
              "mistral"
            ],
            "description": "The type of the provider",
            "example": "openai"
          },
          "name": {
            "type": "string",
            "description": "The name of the provider",
            "example": "OpenAI GPT-4"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key for the provider",
            "example": "sk-..."
          },
          "apiHost": {
            "type": "string",
            "description": "The API host for the provider",
            "example": "https://api.openai.com"
          },
          "apiVersion": {
            "type": "string",
            "description": "The API version for the provider",
            "example": "v1"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the provider is enabled",
            "default": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "Whether this is a system provider",
            "default": false
          },
          "isNotSupportArrayContent": {
            "type": "boolean",
            "description": "Whether this provider does not support array content",
            "default": false
          },
          "models": {
            "description": "The models associated with this provider",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model"
            }
          }
        },
        "required": [
          "id",
          "provider_id",
          "type",
          "name",
          "apiKey",
          "apiHost",
          "enabled",
          "isSystem",
          "isNotSupportArrayContent",
          "models"
        ]
      },
      "Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "模型ID"
          },
          "provider_id": {
            "type": "number",
            "description": "提供商ID"
          },
          "provider": {
            "description": "关联的提供商",
            "allOf": [
              {
                "$ref": "#/components/schemas/Provider"
              }
            ]
          },
          "model_id": {
            "type": "string",
            "description": "模型ID",
            "example": "gpt-4"
          },
          "name": {
            "type": "string",
            "description": "模型名称",
            "example": "GPT-4"
          },
          "group": {
            "type": "string",
            "description": "模型分组",
            "example": "GPT-4"
          },
          "owned_by": {
            "type": "string",
            "description": "模型所有者",
            "example": "OpenAI"
          },
          "description": {
            "type": "string",
            "description": "模型描述"
          },
          "type": {
            "type": "array",
            "description": "模型类型",
            "items": {
              "type": "string",
              "enum": [
                "text",
                "vision",
                "embedding",
                "reasoning",
                "function_calling",
                "web_search"
              ]
            }
          },
          "input_price": {
            "type": "number",
            "description": "输入价格"
          },
          "output_price": {
            "type": "number",
            "description": "输出价格"
          },
          "currency": {
            "type": "string",
            "description": "货币类型",
            "enum": [
              "CNY",
              "USD"
            ],
            "example": "USD"
          }
        },
        "required": [
          "id",
          "provider_id",
          "provider",
          "model_id",
          "name",
          "group"
        ]
      },
      "File": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier of the file"
          },
          "name": {
            "type": "string",
            "description": "Name of the file in storage"
          },
          "origin_name": {
            "type": "string",
            "description": "Original name of the uploaded file"
          },
          "path": {
            "type": "string",
            "description": "Storage path of the file"
          },
          "size": {
            "type": "number",
            "description": "Size of the file in bytes"
          },
          "ext": {
            "type": "string",
            "description": "File extension"
          },
          "type": {
            "type": "string",
            "description": "Type of the file",
            "enum": [
              "image",
              "video",
              "audio",
              "text",
              "document",
              "other"
            ],
            "default": "text"
          },
          "mime_type": {
            "type": "string",
            "description": "MIME type of the file",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the file",
            "nullable": true
          },
          "is_public": {
            "type": "boolean",
            "description": "Whether the file is publicly accessible",
            "default": false
          },
          "uploaded_by": {
            "type": "number",
            "description": "ID of the user who uploaded the file",
            "nullable": true
          },
          "count": {
            "type": "number",
            "description": "Number of times the file has been accessed",
            "default": 0
          },
          "tokens": {
            "type": "number",
            "description": "Number of tokens in the file (if applicable)",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata for the file",
            "nullable": true,
            "additionalProperties": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          },
          "deleted_at": {
            "format": "date-time",
            "type": "string",
            "description": "Deletion timestamp",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "origin_name",
          "path",
          "size",
          "ext",
          "type",
          "mime_type",
          "description",
          "is_public",
          "uploaded_by",
          "count",
          "tokens",
          "metadata",
          "created_at",
          "updated_at",
          "deleted_at"
        ]
      },
      "KnowledgeBaseItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the knowledge item"
          },
          "knowledgeBase": {
            "description": "The knowledge base this item belongs to",
            "allOf": [
              {
                "$ref": "#/components/schemas/KnowledgeBase"
              }
            ]
          },
          "unique_id": {
            "type": "string",
            "description": "Unique identifier string"
          },
          "unique_ids": {
            "description": "Array of unique identifiers",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "description": "Type of the knowledge item",
            "enum": [
              "file",
              "url",
              "note",
              "sitemap",
              "directory"
            ]
          },
          "content": {
            "type": "string",
            "description": "The content of the knowledge item"
          },
          "remark": {
            "type": "string",
            "description": "Additional remarks about the knowledge item"
          },
          "processing_status": {
            "type": "string",
            "description": "Current processing status",
            "enum": [
              "pending",
              "processing",
              "completed",
              "failed"
            ],
            "default": "pending"
          },
          "processing_progress": {
            "type": "number",
            "description": "Processing progress percentage",
            "minimum": 0,
            "maximum": 100,
            "default": 0
          },
          "processing_error": {
            "type": "string",
            "description": "Error message if processing failed"
          },
          "retry_count": {
            "type": "number",
            "description": "Number of processing retry attempts",
            "minimum": 0,
            "default": 0
          },
          "file": {
            "description": "The associated file",
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ]
          },
          "file_id": {
            "type": "number",
            "description": "The ID of the associated file"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "id",
          "knowledgeBase",
          "type",
          "content",
          "processing_status",
          "processing_progress",
          "retry_count",
          "created_at",
          "updated_at"
        ]
      },
      "KnowledgeBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the knowledge base"
          },
          "name": {
            "type": "string",
            "description": "The name of the knowledge base"
          },
          "model": {
            "description": "The associated model for embeddings",
            "allOf": [
              {
                "$ref": "#/components/schemas/Model"
              }
            ]
          },
          "model_id": {
            "type": "number",
            "description": "The associated model for embeddings"
          },
          "rerank_model": {
            "description": "The associated model for reranking",
            "allOf": [
              {
                "$ref": "#/components/schemas/Model"
              }
            ]
          },
          "rerank_model_id": {
            "type": "number",
            "description": "The associated model for reranking"
          },
          "dimensions": {
            "type": "number",
            "description": "The dimensions of the embedding vectors"
          },
          "description": {
            "type": "string",
            "description": "Description of the knowledge base",
            "nullable": true
          },
          "items": {
            "description": "The knowledge items in this base",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseItem"
            }
          },
          "version": {
            "type": "number",
            "description": "Version of the knowledge base",
            "default": 1
          },
          "document_count": {
            "type": "number",
            "description": "Number of documents in the knowledge base",
            "nullable": true
          },
          "chunk_size": {
            "type": "number",
            "description": "Size of each text chunk",
            "nullable": true
          },
          "chunk_overlap": {
            "type": "number",
            "description": "Overlap between consecutive chunks",
            "nullable": true
          },
          "threshold": {
            "type": "number",
            "description": "Similarity threshold for matching",
            "nullable": true
          },
          "top_n": {
            "type": "number",
            "description": "Number of top results to return",
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp when the knowledge base was created"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp when the knowledge base was last updated"
          }
        },
        "required": [
          "id",
          "name",
          "model",
          "model_id",
          "rerank_model",
          "rerank_model_id",
          "dimensions",
          "description",
          "items",
          "version",
          "document_count",
          "chunk_size",
          "chunk_overlap",
          "threshold",
          "top_n",
          "created_at",
          "updated_at"
        ]
      },
      "Assistant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the assistant",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the assistant",
            "example": "Business Consultant"
          },
          "emoji": {
            "type": "string",
            "description": "The emoji representing the assistant",
            "example": "👨‍💼"
          },
          "prompt": {
            "type": "string",
            "description": "The prompt for the assistant",
            "example": "You are a business consultant..."
          },
          "contextCount": {
            "type": "number",
            "description": "Number of context messages to include",
            "example": 5,
            "default": 5
          },
          "temperature": {
            "type": "number",
            "description": "Temperature for response generation",
            "example": 1,
            "default": 1
          },
          "topP": {
            "type": "number",
            "description": "Top P value for response generation",
            "example": 1,
            "default": 1
          },
          "maxTokens": {
            "type": "number",
            "description": "Maximum tokens for response generation",
            "example": 0,
            "nullable": true
          },
          "enableMaxTokens": {
            "type": "boolean",
            "description": "Whether to enable max tokens limit",
            "example": false,
            "default": false
          },
          "streamOutput": {
            "type": "boolean",
            "description": "Whether to stream the output",
            "example": true,
            "default": true
          },
          "knowledge_base_ids": {
            "type": "array",
            "description": "关联的知识库 ID 列表",
            "example": [
              1,
              2,
              3
            ],
            "items": {
              "type": "number"
            },
            "nullable": true
          },
          "knowledge_bases": {
            "description": "关联的知识库列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KnowledgeBase"
            }
          },
          "model_id": {
            "type": "number",
            "description": "关联的模型ID",
            "example": 1,
            "nullable": true
          },
          "model": {
            "description": "关联的模型",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Model"
              }
            ]
          },
          "mcpServers": {
            "type": "object",
            "description": "The MCP servers configuration",
            "example": {
              "@modelscope/@modelcontextprotocol/time": {
                "name": "时间服务",
                "type": "sse",
                "description": "时间服务描述",
                "isActive": true
              }
            }
          },
          "toolUseMode": {
            "type": "string",
            "description": "工具调用方式",
            "example": "function",
            "enum": [
              "function",
              "prompt"
            ],
            "default": "prompt"
          },
          "customParameters": {
            "type": "object",
            "description": "自定义参数配置",
            "example": {
              "key1": "value1",
              "key2": "value2"
            },
            "nullable": true
          },
          "groups": {
            "description": "可访问此代理的分组列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          }
        },
        "required": [
          "id",
          "name",
          "emoji",
          "prompt",
          "contextCount",
          "temperature",
          "topP",
          "maxTokens",
          "enableMaxTokens",
          "streamOutput",
          "mcpServers",
          "toolUseMode",
          "groups"
        ]
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "分组ID"
          },
          "name": {
            "type": "string",
            "description": "分组名称",
            "example": "研发部"
          },
          "description": {
            "type": "string",
            "description": "分组描述",
            "example": "负责产品研发的团队"
          },
          "assistantAccessType": {
            "type": "string",
            "description": "智能体访问类型",
            "enum": [
              "all",
              "specified"
            ],
            "example": "specified"
          },
          "users": {
            "description": "用户列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "assistants": {
            "description": "可访问的代理列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Assistant"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "assistantAccessType",
          "users",
          "assistants"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "用户名",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "description": "邮箱",
            "example": "john@example.com"
          },
          "mobile": {
            "type": "string",
            "description": "手机号",
            "example": "13800138000"
          },
          "nickname": {
            "type": "string",
            "description": "昵称",
            "example": "张三"
          },
          "avatar": {
            "type": "string",
            "description": "头像URL",
            "example": "https://example.com/avatar.jpg"
          },
          "groupId": {
            "type": "number",
            "description": "分组ID",
            "example": 1
          },
          "password": {
            "type": "string",
            "description": "密码",
            "example": "newpassword123"
          }
        }
      },
      "CreateTokenDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "description": "User ID for whom the token will be created",
            "example": 1
          },
          "description": {
            "type": "string",
            "description": "A human-readable description of the token purpose",
            "example": "Development API Token for Project X"
          },
          "expiresAt": {
            "type": "string",
            "description": "The date and time when this token will expire",
            "example": "2024-12-31T23:59:59Z"
          }
        },
        "required": [
          "userId",
          "expiresAt"
        ]
      },
      "UpdateTokenDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A human-readable description of the token purpose",
            "example": "Development API Token for Project X"
          },
          "expiresAt": {
            "type": "string",
            "description": "The date and time when this token will expire",
            "example": "2024-12-31T23:59:59Z"
          }
        }
      },
      "ImportLicenseDto": {
        "type": "object",
        "properties": {
          "licenseData": {
            "type": "string",
            "description": "License 数据（base64 字符串）",
            "example": "eyJsaWNlbnNlX2lkIjoiYWEzYzQ2MjgtMmM3Yy00YjZjLTlkNWEtNTc5N2E0Yjg2NDcxIi..."
          }
        },
        "required": [
          "licenseData"
        ]
      },
      "CreateGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "分组名称",
            "example": "研发部"
          },
          "description": {
            "type": "string",
            "description": "分组描述",
            "example": "负责产品研发的团队"
          },
          "assistantAccessType": {
            "type": "string",
            "description": "智能体访问类型",
            "enum": [
              "all",
              "specified"
            ],
            "example": "specified",
            "default": "specified"
          },
          "modelAccessType": {
            "type": "string",
            "description": "模型访问类型",
            "enum": [
              "all",
              "specified"
            ],
            "example": "specified",
            "default": "specified"
          },
          "assistantIds": {
            "description": "分组可访问的智能体 ID 列表（仅在 assistantAccessType 为 specified 时需要）",
            "example": [
              1,
              2,
              3
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "分组名称",
            "example": "研发部"
          },
          "description": {
            "type": "string",
            "description": "分组描述",
            "example": "负责产品研发的团队"
          },
          "assistantAccessType": {
            "type": "string",
            "description": "智能体访问类型",
            "enum": [
              "all",
              "specified"
            ],
            "example": "specified",
            "default": "specified"
          },
          "modelAccessType": {
            "type": "string",
            "description": "模型访问类型",
            "enum": [
              "all",
              "specified"
            ],
            "example": "specified",
            "default": "specified"
          },
          "assistantIds": {
            "description": "分组可访问的智能体 ID 列表（仅在 assistantAccessType 为 specified 时需要）",
            "example": [
              1,
              2,
              3
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "访问令牌",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refresh_token": {
            "type": "string",
            "description": "刷新令牌",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "description": "用户信息",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        },
        "required": [
          "access_token",
          "refresh_token",
          "user"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "刷新令牌",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "RefreshTokenResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "访问令牌",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "刷新令牌",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "accessToken",
          "refreshToken"
        ]
      },
      "CreateProviderDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "openai",
              "openai-response",
              "anthropic",
              "gemini",
              "qwenlm",
              "azure-openai",
              "vertexai",
              "mistral"
            ],
            "description": "The type of the provider",
            "example": "openai"
          },
          "name": {
            "type": "string",
            "description": "The name of the provider",
            "example": "OpenAI GPT-4"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key for the provider",
            "example": "sk-..."
          },
          "apiHost": {
            "type": "string",
            "description": "The API host for the provider",
            "example": "https://api.openai.com"
          },
          "apiVersion": {
            "type": "string",
            "description": "The API version for the provider",
            "example": "v1"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the provider is enabled",
            "default": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "Whether this is a system provider",
            "default": false
          },
          "isNotSupportArrayContent": {
            "type": "boolean",
            "description": "Whether this provider does not support array content",
            "default": false
          }
        },
        "required": [
          "type",
          "name",
          "apiKey",
          "apiHost"
        ]
      },
      "UpdateProviderDto": {
        "type": "object",
        "properties": {}
      },
      "AddModelDto": {
        "type": "object",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "模型ID",
            "example": "gpt-4"
          },
          "name": {
            "type": "string",
            "description": "模型名称",
            "example": "gpt-4"
          },
          "group": {
            "type": "string",
            "description": "模型分组",
            "example": "GPT-4"
          },
          "owned_by": {
            "type": "string",
            "description": "模型所有者",
            "example": "OpenAI"
          },
          "description": {
            "type": "string",
            "description": "模型描述"
          },
          "type": {
            "type": "array",
            "description": "模型类型",
            "items": {
              "type": "string",
              "enum": [
                "text",
                "vision",
                "embedding",
                "reasoning",
                "function_calling",
                "web_search"
              ]
            }
          }
        },
        "required": [
          "model_id",
          "name",
          "group"
        ]
      },
      "AddModelsDto": {
        "type": "object",
        "properties": {
          "models": {
            "description": "模型列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddModelDto"
            }
          }
        },
        "required": [
          "models"
        ]
      },
      "RemoveModelsDto": {
        "type": "object",
        "properties": {
          "modelIds": {
            "description": "要删除的模型ID列表",
            "example": [
              1,
              2,
              3
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "modelIds"
        ]
      },
      "UpdateModelDto": {
        "type": "object",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "模型ID",
            "example": "gpt-4"
          },
          "name": {
            "type": "string",
            "description": "模型名称",
            "example": "GPT-4"
          },
          "description": {
            "type": "string",
            "description": "模型描述"
          },
          "input_price": {
            "type": "number",
            "description": "输入价格"
          },
          "output_price": {
            "type": "number",
            "description": "输出价格"
          },
          "currency": {
            "type": "string",
            "description": "货币类型",
            "enum": [
              "CNY",
              "USD"
            ],
            "example": "USD"
          }
        }
      },
      "CreateAgentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the agent",
            "example": "产品经理 - Product Manager"
          },
          "emoji": {
            "type": "string",
            "description": "The emoji representing the agent",
            "example": "👨‍💼"
          },
          "group": {
            "type": "array",
            "description": "The groups/categories of the agent",
            "example": [
              "职业",
              "商业",
              "工具"
            ],
            "items": {
              "type": "string"
            }
          },
          "prompt": {
            "type": "string",
            "description": "The prompt for the agent",
            "example": "You are a product manager..."
          },
          "description": {
            "type": "string",
            "description": "The description of the agent",
            "example": "A professional business consultant who can help with business strategy"
          }
        },
        "required": [
          "name",
          "emoji",
          "group",
          "prompt",
          "description"
        ]
      },
      "Agent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The unique identifier of the agent",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the agent",
            "example": "产品经理 - Product Manager"
          },
          "emoji": {
            "type": "string",
            "description": "The emoji representing the agent",
            "example": "👨‍💼"
          },
          "group": {
            "type": "array",
            "description": "The groups/categories of the agent",
            "example": [
              "职业",
              "商业",
              "工具"
            ],
            "items": {
              "type": "string"
            }
          },
          "prompt": {
            "type": "string",
            "description": "The prompt for the agent",
            "example": "You are a product manager..."
          },
          "description": {
            "type": "string",
            "description": "The description of the agent",
            "example": "A professional business consultant who can help with business strategy"
          }
        },
        "required": [
          "id",
          "name",
          "emoji",
          "group",
          "prompt",
          "description"
        ]
      },
      "UpdateAgentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the agent",
            "example": "产品经理 - Product Manager"
          },
          "emoji": {
            "type": "string",
            "description": "The emoji representing the agent",
            "example": "👨‍💼"
          },
          "group": {
            "type": "array",
            "description": "The groups/categories of the agent",
            "example": [
              "职业",
              "商业",
              "工具"
            ],
            "items": {
              "type": "string"
            }
          },
          "prompt": {
            "type": "string",
            "description": "The prompt for the agent",
            "example": "You are a product manager..."
          },
          "description": {
            "type": "string",
            "description": "The description of the agent",
            "example": "A professional business consultant who can help with business strategy"
          }
        }
      },
      "CreateAssistantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "智能体名称",
            "example": "Business Consultant"
          },
          "emoji": {
            "type": "string",
            "description": "智能体表情",
            "example": "👨‍💼"
          },
          "prompt": {
            "type": "string",
            "description": "智能体提示词",
            "example": "You are a business consultant..."
          },
          "contextCount": {
            "type": "number",
            "description": "上下文消息数量",
            "example": 5,
            "default": 5
          },
          "temperature": {
            "type": "number",
            "description": "温度参数",
            "example": 1,
            "default": 1
          },
          "topP": {
            "type": "number",
            "description": "Top P 参数",
            "example": 1,
            "default": 1
          },
          "maxTokens": {
            "type": "number",
            "description": "最大 token 数（可选，默认为 0）",
            "example": 0,
            "default": 0,
            "nullable": true
          },
          "enableMaxTokens": {
            "type": "boolean",
            "description": "是否启用最大 token 限制（可选，默认为 false）",
            "example": false,
            "default": false
          },
          "streamOutput": {
            "type": "boolean",
            "description": "是否启用流式输出",
            "example": true,
            "default": true
          },
          "knowledge_base_ids": {
            "description": "关联的知识库 ID 列表",
            "example": [
              1,
              2,
              3
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "model_id": {
            "type": "number",
            "description": "关联的模型 ID",
            "example": 1
          },
          "mcpServers": {
            "type": "object",
            "description": "MCP 服务器配置",
            "example": {
              "@modelscope/@modelcontextprotocol/time": {
                "name": "时间服务",
                "type": "sse",
                "description": "时间服务描述",
                "isActive": true
              }
            }
          },
          "customParameters": {
            "type": "object",
            "description": "自定义参数配置",
            "example": {
              "key1": "value1",
              "key2": "value2"
            }
          }
        },
        "required": [
          "name",
          "emoji",
          "prompt"
        ]
      },
      "UpdateAssistantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "智能体名称",
            "example": "Business Consultant"
          },
          "emoji": {
            "type": "string",
            "description": "智能体表情",
            "example": "👨‍💼"
          },
          "prompt": {
            "type": "string",
            "description": "智能体提示词",
            "example": "You are a business consultant..."
          },
          "contextCount": {
            "type": "number",
            "description": "上下文消息数量",
            "example": 5
          },
          "temperature": {
            "type": "number",
            "description": "温度",
            "example": 1
          },
          "topP": {
            "type": "number",
            "description": "Top P 值",
            "example": 1
          },
          "maxTokens": {
            "type": "number",
            "description": "最大 token 数",
            "example": 0,
            "nullable": true
          },
          "enableMaxTokens": {
            "type": "boolean",
            "description": "是否启用最大 token 限制",
            "example": false
          },
          "streamOutput": {
            "type": "boolean",
            "description": "是否流式输出",
            "example": true
          },
          "knowledge_base_ids": {
            "description": "关联的知识库 ID 列表",
            "example": [
              1,
              2,
              3
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "model_id": {
            "type": "number",
            "description": "关联的模型 ID",
            "example": 1
          },
          "mcpServers": {
            "type": "object",
            "description": "MCP 服务器配置",
            "example": {
              "@modelscope/@modelcontextprotocol/time": {
                "name": "时间服务",
                "type": "sse",
                "description": "时间服务描述",
                "isActive": true
              }
            }
          },
          "customParameters": {
            "type": "object",
            "description": "自定义参数配置",
            "example": {
              "key1": "value1",
              "key2": "value2"
            }
          },
          "toolUseMode": {
            "type": "string",
            "description": "工具调用方式",
            "example": "function",
            "enum": [
              "function",
              "prompt"
            ]
          }
        }
      },
      "BatchUpdateMcpServersDto": {
        "type": "object",
        "properties": {
          "mcpServers": {
            "type": "object",
            "description": "完整的 MCP 服务器配置对象",
            "example": {
              "@modelscope/@modelcontextprotocol/time": {
                "name": "时间服务",
                "type": "sse",
                "description": "时间服务描述",
                "isActive": true,
                "provider": "ModelScope",
                "baseUrl": "https://mcp.api-inference.modelscope.cn/sse/61d2cad4b7044b"
              },
              "kndZRfd-QvJ2vbAlA-RGm": {
                "name": "@cherry/python",
                "type": "inMemory",
                "description": "在安全的沙盒环境中执行 Python 代码",
                "isActive": true,
                "provider": "CherryAI"
              }
            }
          }
        },
        "required": [
          "mcpServers"
        ]
      },
      "CreateKnowledgeBaseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "知识库名称",
            "example": "产品知识库"
          },
          "model_id": {
            "type": "number",
            "description": "向量模型ID",
            "example": 1
          },
          "rerank_model_id": {
            "type": "number",
            "description": "重排序模型ID（可选）",
            "example": 2
          },
          "dimensions": {
            "type": "number",
            "description": "向量维度",
            "example": 1536
          },
          "description": {
            "type": "string",
            "description": "知识库描述（可选）",
            "example": "存储产品相关的文档和知识"
          },
          "chunk_size": {
            "type": "number",
            "description": "文本分块大小（可选）",
            "example": 500
          },
          "chunk_overlap": {
            "type": "number",
            "description": "文本分块重叠大小（可选）",
            "example": 50
          },
          "threshold": {
            "type": "number",
            "description": "相似度阈值（可选）",
            "example": 0.7
          },
          "top_n": {
            "type": "number",
            "description": "返回结果数量（可选）",
            "example": 3
          }
        },
        "required": [
          "name",
          "model_id",
          "dimensions"
        ]
      },
      "UpdateKnowledgeBaseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "知识库名称",
            "example": "产品知识库"
          },
          "model_id": {
            "type": "number",
            "description": "向量模型ID",
            "example": 1
          },
          "rerank_model_id": {
            "type": "number",
            "description": "重排序模型ID（可选）",
            "example": 2
          },
          "dimensions": {
            "type": "number",
            "description": "向量维度",
            "example": 1536
          },
          "description": {
            "type": "string",
            "description": "知识库描述（可选）",
            "example": "存储产品相关的文档和知识"
          },
          "chunk_size": {
            "type": "number",
            "description": "文本分块大小（可选）",
            "example": 500
          },
          "chunk_overlap": {
            "type": "number",
            "description": "文本分块重叠大小（可选）",
            "example": 50
          },
          "threshold": {
            "type": "number",
            "description": "相似度阈值（可选）",
            "example": 0.7
          },
          "top_n": {
            "type": "number",
            "description": "返回结果数量（可选）",
            "example": 3
          }
        }
      },
      "CreateKnowledgeBaseItemDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "知识库条目类型",
            "enum": [
              "file",
              "url",
              "note",
              "sitemap",
              "directory"
            ],
            "example": "url"
          },
          "content": {
            "type": "string",
            "description": "内容 - 对于 url/sitemap 类型是网址，对于 note/directory 类型是文本内容，对于 file 类型是文件 ID",
            "example": "https://example.com 或 这是一段笔记内容 或 1"
          },
          "remark": {
            "type": "string",
            "description": "备注说明（可选）",
            "example": "这是一个重要的文档"
          },
          "file_id": {
            "type": "number",
            "description": "文件 ID（仅当 type 为 file 时需要）",
            "example": 1
          }
        },
        "required": [
          "type",
          "content"
        ]
      },
      "SearchKnowledgeBaseDto": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string",
            "description": "搜索关键词"
          }
        },
        "required": [
          "search"
        ]
      },
      "SearchKnowledgeBaseResponseDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "文本内容"
          },
          "score": {
            "type": "number",
            "description": "相似度分数"
          },
          "metadata": {
            "type": "object",
            "description": "元数据"
          }
        },
        "required": [
          "text",
          "score",
          "metadata"
        ]
      },
      "RerankKnowledgeBaseDto": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string",
            "description": "搜索关键词"
          },
          "results": {
            "description": "需要重排序的搜索结果",
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "search",
          "results"
        ]
      },
      "CheckDto": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "number",
            "description": "提供商ID",
            "example": 1
          },
          "model": {
            "type": "string",
            "description": "模型名称",
            "example": "gpt-4"
          }
        },
        "required": [
          "provider",
          "model"
        ]
      },
      "CheckResponseDto": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean",
            "description": "模型是否可用",
            "example": true
          },
          "error": {
            "type": "object",
            "description": "错误信息（如果有）",
            "example": null,
            "nullable": true
          }
        },
        "required": [
          "valid"
        ]
      },
      "MinApp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "小程序ID",
            "example": 1
          },
          "app_id": {
            "type": "string",
            "description": "小程序 APP_ID",
            "example": "chatgpt"
          },
          "name": {
            "type": "string",
            "description": "小程序名称",
            "example": "示例小程序"
          },
          "logo": {
            "type": "string",
            "description": "小程序图标",
            "example": "/files/download/1"
          },
          "file_id": {
            "type": "number",
            "description": "关联文件ID",
            "example": 1
          },
          "file": {
            "description": "关联文件",
            "allOf": [
              {
                "$ref": "#/components/schemas/File"
              }
            ]
          },
          "url": {
            "type": "string",
            "description": "小程序链接",
            "example": "https://example.com"
          },
          "bodered": {
            "type": "boolean",
            "description": "是否显示边框",
            "example": false,
            "default": false
          },
          "background": {
            "type": "string",
            "description": "背景色",
            "example": "#ffffff"
          },
          "isSystem": {
            "type": "boolean",
            "description": "是否为系统小程序",
            "example": false,
            "default": false
          },
          "enabled": {
            "type": "boolean",
            "description": "是否启用",
            "example": true,
            "default": true
          }
        },
        "required": [
          "id",
          "app_id",
          "name",
          "url",
          "isSystem",
          "enabled"
        ]
      },
      "ServerModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "模型ID",
            "example": "gpt-4"
          },
          "name": {
            "type": "string",
            "description": "模型名称",
            "example": "GPT-4"
          },
          "owned_by": {
            "type": "string",
            "description": "模型所属",
            "example": "openai"
          },
          "provider": {
            "type": "string",
            "description": "模型所属提供商ID",
            "example": "openai"
          }
        },
        "required": [
          "id",
          "name",
          "owned_by",
          "provider"
        ]
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "工作流唯一标识"
          },
          "type": {
            "type": "string",
            "description": "工作流类型",
            "enum": [
              "workflow",
              "chatflow"
            ]
          },
          "providerId": {
            "type": "string",
            "description": "提供商ID",
            "default": "dify"
          },
          "name": {
            "type": "string",
            "description": "工作流名称"
          },
          "description": {
            "type": "string",
            "description": "工作流描述"
          },
          "enabled": {
            "type": "boolean",
            "description": "是否启用",
            "default": true
          },
          "apiKey": {
            "type": "string",
            "description": "API密钥"
          },
          "apiHost": {
            "type": "string",
            "description": "API地址"
          },
          "parameters": {
            "type": "array",
            "description": "工作流参数配置，JSON 格式",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "trigger": {
            "type": "string",
            "description": "触发词"
          }
        },
        "required": [
          "id",
          "type",
          "providerId",
          "name",
          "enabled",
          "apiKey",
          "apiHost",
          "trigger"
        ]
      },
      "Setting": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The unique key of the setting",
            "example": "system.theme"
          },
          "value": {
            "type": "string",
            "description": "The value of the setting",
            "example": "dark",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of what this setting is used for",
            "example": "System theme preference",
            "nullable": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "When this setting was created",
            "example": "2024-03-21T10:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "When this setting was last updated",
            "example": "2024-03-21T10:00:00Z"
          }
        },
        "required": [
          "key",
          "value",
          "description",
          "createdAt",
          "updatedAt"
        ]
      },
      "ConfigurationResponseDto": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "API密钥",
            "example": "sk-xxxxxxxxxxxxxxxx"
          },
          "providers": {
            "description": "提供商列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Provider"
            }
          },
          "models": {
            "description": "可用模型列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServerModel"
            }
          },
          "defaultAssistantModel": {
            "description": "默认助手模型",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServerModel"
              }
            ]
          },
          "defaultTopicNamingModel": {
            "description": "默认主题命名模型",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServerModel"
              }
            ]
          },
          "defaultTranslationModel": {
            "description": "默认翻译模型",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServerModel"
              }
            ]
          },
          "mcpServers": {
            "type": "array",
            "description": "MCP服务器列表",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "服务器ID"
                },
                "name": {
                  "type": "string",
                  "description": "服务器名称"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "stdio",
                    "sse",
                    "inMemory",
                    "streamableHttp"
                  ],
                  "description": "服务器类型"
                },
                "description": {
                  "type": "string",
                  "description": "服务器描述"
                },
                "baseUrl": {
                  "type": "string",
                  "description": "基础URL"
                },
                "command": {
                  "type": "string",
                  "description": "命令"
                },
                "registryUrl": {
                  "type": "string",
                  "description": "注册URL"
                },
                "args": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "命令参数"
                },
                "env": {
                  "type": "object",
                  "description": "环境变量"
                },
                "isActive": {
                  "type": "boolean",
                  "description": "是否激活"
                }
              }
            }
          },
          "workflows": {
            "description": "工作流列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workflow"
            }
          },
          "minApps": {
            "description": "小程序列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MinApp"
            }
          },
          "assistants": {
            "description": "智能体列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Assistant"
            }
          },
          "knowledgeBases": {
            "description": "知识库列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KnowledgeBase"
            }
          },
          "settings": {
            "description": "设置列表",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Setting"
            }
          }
        },
        "required": [
          "apiKey",
          "providers",
          "models",
          "defaultAssistantModel",
          "defaultTopicNamingModel",
          "defaultTranslationModel",
          "mcpServers",
          "workflows",
          "minApps",
          "assistants",
          "knowledgeBases",
          "settings"
        ]
      },
      "SettingResponseDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "设置键",
            "example": "app.name"
          },
          "value": {
            "type": "string",
            "description": "设置值",
            "example": "Cherry Studio"
          },
          "description": {
            "type": "string",
            "description": "设置描述",
            "example": "应用名称"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "创建时间",
            "example": "2024-03-20T12:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "更新时间",
            "example": "2024-03-20T12:00:00Z"
          }
        },
        "required": [
          "key",
          "value",
          "createdAt",
          "updatedAt"
        ]
      },
      "SetSettingDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "设置值",
            "example": "some-value"
          },
          "description": {
            "type": "string",
            "description": "设置描述",
            "example": "这是一个示例设置"
          }
        },
        "required": [
          "value"
        ]
      },
      "DeleteSettingResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "删除操作是否成功",
            "example": true
          }
        },
        "required": [
          "success"
        ]
      },
      "CreateWorkflowDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "workflow",
              "chatflow"
            ],
            "description": "工作流类型"
          },
          "name": {
            "type": "string",
            "description": "工作流名称"
          },
          "description": {
            "type": "string",
            "description": "工作流描述"
          },
          "enabled": {
            "type": "boolean",
            "description": "是否启用"
          },
          "apiKey": {
            "type": "string",
            "description": "API Key"
          },
          "apiHost": {
            "type": "string",
            "description": "API Host"
          },
          "parameters": {
            "type": "array",
            "description": "工作流参数配置，JSON 格式",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "trigger": {
            "type": "string",
            "description": "触发词"
          }
        },
        "required": [
          "type",
          "name",
          "enabled",
          "apiKey",
          "apiHost",
          "trigger"
        ]
      },
      "UpdateWorkflowDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "workflow",
              "chatflow"
            ],
            "description": "工作流类型"
          },
          "name": {
            "type": "string",
            "description": "工作流名称"
          },
          "description": {
            "type": "string",
            "description": "工作流描述"
          },
          "enabled": {
            "type": "boolean",
            "description": "是否启用"
          },
          "apiKey": {
            "type": "string",
            "description": "API Key"
          },
          "apiHost": {
            "type": "string",
            "description": "API Host"
          },
          "parameters": {
            "type": "array",
            "description": "工作流参数配置，JSON 格式",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          },
          "trigger": {
            "type": "string",
            "description": "触发词"
          }
        }
      }
    }
  }
}